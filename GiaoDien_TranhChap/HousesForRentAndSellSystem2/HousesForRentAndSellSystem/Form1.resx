<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAOiSURBVGhD7ZlZTxNRFMf5LCLugLKUpQt7NwqIAlZNBF/0XSXIjrIYECN+IyOGYPwGJIV2OjNd
        aAu0+AT0eM90xlDa3rlzMToP/ScnTSczye83PXPm3rSinHLKKcec+TX41Hfc79897n8MmT4/ZHxYjyDT
        izUCaS/WMKQ9WEOQdg/BkethrpwPctUzqNRh9/1cdQ3AYSdWPxx0YPXBQTuWDw7asHoh5SBl9+bK5oGU
        1RNIWd1eFYs9BFwwATwkrW5ItrqCKhZ7/js8KRUeki0uULHYYyb4ZIuTQ8BE8InmHh4B88AnmngETASf
        aOrmETAPfMLCIcAKn+geALHDB1ECzAovE1ih1Qkx8skCn2js4hHQh48T4N1nLyC99QPE2SWQCKAefJiA
        C5PvIL25BYHhMZDJdz34/YZODgGGO783+hJOkinAZM/OQFz4AKLDS4UPzy0r52Lw2sDIGESbiQQFnlOA
        3vPYNpntnwqIlj8Sdo8uvJb0920IWbqo8Pv1HRwCOg8s9rw4XwiUk1gB0ebOgxfnV4qeK7ydBwkFKPD7
        de3GBWjw2rSRCaA48x6yJycqkppsFuS1DQhbXQq8tPpZOXY+eE1ofBYES6cufJxbgAKvTRvs+fB0CYnV
        DaVKwYca2eDj99o4BBjgtWkjOTwQnlwolMBc8s4jfPyug1OAAV6bNpLdXVpCDS98vJZHwAC8Nm2w54UJ
        InHhYcXgMV74eK2dT8AIPE4b0eos2vNKyDFp5RMISt8bg4/VcAgYhcdpUxJeiyoRIrBG4GPVNk4BI/Br
        Xwrgs6enSuUFJZbXIUhAWeFj1VYOgcvCa6NyfKbwwSbnikvrEEIJBvjYHR6BvwCPDyz2fOhNCYnFj7BH
        YPXgo7dbeQTo8LgkVl5gRZYH4ZnFvJcU9rwwVfzc4OtpCNfaqPDRWy3GBWjwuBHB9Twuo8+nGLw2bbDn
        Q2QZfVHi6NsW7BJQGjynQGl4LNyMBPzP85bT+IvQlgdB0iahc++Jk0QSdgaegFRDoCnw0ZvNHAIUeGUb
        aPVAhGxEAsOjcEQ2J8LEnDrj6S+pILnTwVdTcPh1E3b6/CAywEdvNPEI0OG1bSBuRnA9z7Ik1qYN9jy2
        DcudR/gIl0ApeMY9bCl4vWlTDD5y3cIjYB74yDUOATPBR6oaOQRMBC9XNXAKmARevsojYCJ4ubKeQ8Dq
        Ec0CL1fWCSoWe1I2p4/ASyaAFyNXGoz/xVROOeWU8w9SUfEbF0Q0tPbNoD4AAAAASUVORK5CYII=
</value>
  </data>
</root>